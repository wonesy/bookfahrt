// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BooksColumns holds the columns for the "books" table.
	BooksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "author", Type: field.TypeString},
		{Name: "slug", Type: field.TypeString, Unique: true},
	}
	// BooksTable holds the schema information for the "books" table.
	BooksTable = &schema.Table{
		Name:       "books",
		Columns:    BooksColumns,
		PrimaryKey: []*schema.Column{BooksColumns[0]},
	}
	// ClubsColumns holds the columns for the "clubs" table.
	ClubsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
	}
	// ClubsTable holds the schema information for the "clubs" table.
	ClubsTable = &schema.Table{
		Name:       "clubs",
		Columns:    ClubsColumns,
		PrimaryKey: []*schema.Column{ClubsColumns[0]},
	}
	// CompletionsColumns holds the columns for the "completions" table.
	CompletionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// CompletionsTable holds the schema information for the "completions" table.
	CompletionsTable = &schema.Table{
		Name:       "completions",
		Columns:    CompletionsColumns,
		PrimaryKey: []*schema.Column{CompletionsColumns[0]},
	}
	// GenresColumns holds the columns for the "genres" table.
	GenresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// GenresTable holds the schema information for the "genres" table.
	GenresTable = &schema.Table{
		Name:       "genres",
		Columns:    GenresColumns,
		PrimaryKey: []*schema.Column{GenresColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "last_login_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// BookGenresColumns holds the columns for the "book_genres" table.
	BookGenresColumns = []*schema.Column{
		{Name: "book_id", Type: field.TypeInt},
		{Name: "genre_id", Type: field.TypeInt},
	}
	// BookGenresTable holds the schema information for the "book_genres" table.
	BookGenresTable = &schema.Table{
		Name:       "book_genres",
		Columns:    BookGenresColumns,
		PrimaryKey: []*schema.Column{BookGenresColumns[0], BookGenresColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "book_genres_book_id",
				Columns:    []*schema.Column{BookGenresColumns[0]},
				RefColumns: []*schema.Column{BooksColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "book_genres_genre_id",
				Columns:    []*schema.Column{BookGenresColumns[1]},
				RefColumns: []*schema.Column{GenresColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserClubsColumns holds the columns for the "user_clubs" table.
	UserClubsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "club_id", Type: field.TypeUUID},
	}
	// UserClubsTable holds the schema information for the "user_clubs" table.
	UserClubsTable = &schema.Table{
		Name:       "user_clubs",
		Columns:    UserClubsColumns,
		PrimaryKey: []*schema.Column{UserClubsColumns[0], UserClubsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_clubs_user_id",
				Columns:    []*schema.Column{UserClubsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_clubs_club_id",
				Columns:    []*schema.Column{UserClubsColumns[1]},
				RefColumns: []*schema.Column{ClubsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BooksTable,
		ClubsTable,
		CompletionsTable,
		GenresTable,
		UsersTable,
		BookGenresTable,
		UserClubsTable,
	}
)

func init() {
	BookGenresTable.ForeignKeys[0].RefTable = BooksTable
	BookGenresTable.ForeignKeys[1].RefTable = GenresTable
	UserClubsTable.ForeignKeys[0].RefTable = UsersTable
	UserClubsTable.ForeignKeys[1].RefTable = ClubsTable
}
